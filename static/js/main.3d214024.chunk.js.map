{"version":3,"sources":["components/Button/Button.tsx","App.tsx","index.tsx"],"names":["Button","clickCallback","title","type","onClick","className","goodsFromServer","map","good","id","uuidv4","value","App","state","selectedGoods","clearSelection","setState","addGood","removeGood","selectedGood","filter","formatTitle","length","slice","join","this","isGoodSelected","includes","buttonCallback","buttonTitle","listClassName","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6PAOaA,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,MAAlB,OACrC,wBACEC,KAAK,SACLC,QAASH,EACTI,UAAU,SAHZ,SAKGH,KCHCI,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAAAC,GAAI,MAAK,CACbC,GAAIC,cACJC,MAAOH,MASHI,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,eAAiB,kBAAM,EAAKC,SAAS,CAAEF,cAAe,M,EAEtDG,QAAU,SAACT,GACT,IAAQM,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CAAEF,cAAc,GAAD,mBAAMA,GAAN,CAAqBN,O,EAGpDU,WAAa,SAACC,GACZ,IAAQL,EAAkB,EAAKD,MAAvBC,cAER,EAAKE,SAAS,CACZF,cAAeA,EAAcM,QAC3B,SAAAZ,GAAI,OAAIA,IAASW,Q,EAKvBE,YAAc,WACZ,IAAQP,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcQ,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUR,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcS,MAAM,GAAI,GAAGC,KAAK,MAA1C,0BACOV,EAAcA,EAAcQ,OAAS,M,4CAIlD,WAAU,IAAD,OACCR,EAAkBW,KAAKZ,MAAvBC,cAER,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,kCACqBoB,KAAKJ,iBAG1B,oBAAIhB,UAAU,kBAAd,SAEIC,EAAgBC,KACd,SAAAC,GACE,IAAMkB,EAAiBZ,EAAca,SAASnB,EAAKG,OAE7CiB,EAAiBF,EACnB,kBAAM,EAAKR,WAAWV,EAAKG,QAC3B,kBAAM,EAAKM,QAAQT,EAAKG,QAEtBkB,EAAcH,EAChB,cACA,WAEEI,EAAa,UAAMJ,EAAiB,SAAW,GAAlC,gBAEnB,OACE,qBACErB,UAAWyB,EADb,UAIGtB,EAAKG,MACN,cAAC,EAAD,CACEV,cAAe2B,EACf1B,MAAO2B,MALJrB,EAAKC,SAcpBK,EAAcQ,OAAS,GACvB,wBACEnB,KAAK,SACLC,QAASqB,KAAKV,eACdV,UAAU,uCAHZ,8B,GAlFQ0B,IAAMC,WA+FTpB,IC5HfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d214024.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clickCallback: () => void;\n  title: string;\n};\n\nexport const Button: React.FC<Props> = ({ clickCallback, title }) => (\n  <button\n    type=\"button\"\n    onClick={clickCallback}\n    className=\"button\"\n  >\n    {title}\n  </button>\n);\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\nimport { Button } from './components/Button/Button';\n\ninterface Good {\n  id: string;\n  value: string;\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map(good => ({\n  id: uuidv4(),\n  value: good,\n}));\n\nexport type Props = {};\n\ninterface State {\n  selectedGoods: string[];\n}\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  clearSelection = () => this.setState({ selectedGoods: [] });\n\n  addGood = (good: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({ selectedGoods: [...selectedGoods, good] });\n  };\n\n  removeGood = (selectedGood: string) => {\n    const { selectedGoods } = this.state;\n\n    this.setState({\n      selectedGoods: selectedGoods.filter(\n        good => good !== selectedGood,\n      ),\n    });\n  };\n\n  formatTitle = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')}\n         and ${selectedGoods[selectedGoods.length - 1]}`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"title app__title\">\n          {`Selected good: ${this.formatTitle()}`}\n        </h1>\n\n        <ul className=\"goods app__list\">\n          {\n            goodsFromServer.map(\n              good => {\n                const isGoodSelected = selectedGoods.includes(good.value);\n\n                const buttonCallback = isGoodSelected\n                  ? () => this.removeGood(good.value)\n                  : () => this.addGood(good.value);\n\n                const buttonTitle = isGoodSelected\n                  ? 'Remove good'\n                  : 'Add good';\n\n                const listClassName = `${isGoodSelected ? 'active' : ''} goods__good`;\n\n                return (\n                  <li\n                    className={listClassName}\n                    key={good.id}\n                  >\n                    {good.value}\n                    <Button\n                      clickCallback={buttonCallback}\n                      title={buttonTitle}\n                    />\n                  </li>\n                );\n              },\n            )\n          }\n        </ul>\n\n        {(selectedGoods.length > 0) && (\n          <button\n            type=\"button\"\n            onClick={this.clearSelection}\n            className=\"button button__clear-all app__button\"\n          >\n            Clear all\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}